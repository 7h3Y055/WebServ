# User and worker processes
user www-data;               # User and group under which Nginx runs
worker_processes auto;       # Number of worker processes (auto uses the number of available CPUs)

# Error logging
error_log /var/log/nginx/error.log warn;  # Error log location
pid /var/run/nginx.pid;      # PID file

# Events block
events {
    worker_connections 1024;  # Maximum number of connections per worker
}

# HTTP block
http {
    include /etc/nginx/mime.types;  # Include mime types
    default_type application/octet-stream;  # Default MIME type

    # Logging settings
    access_log /var/log/nginx/access.log;  # Access log location

    # Gzip compression settings
    gzip on;                       # Enable gzip
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript; # MIME types to compress
    gzip_min_length 256;          # Minimum length to compress
    gzip_vary on;                 # Enable Vary header for caching

    # Server block for HTTP
    server {
        listen 80;                # Listen on port 80
        server_name example.com;  # Your domain name

        # Redirect all HTTP traffic to HTTPS
        return 301 https://$host$request_uri;
    }

    # Server block for HTTPS
    server {
        listen 443 ssl;           # Listen on port 443 with SSL
        server_name example.com;  # Your domain name

        # SSL settings
        ssl_certificate /etc/ssl/certs/your_cert.crt;  # Path to your SSL certificate
        ssl_certificate_key /etc/ssl/private/your_key.key;  # Path to your SSL certificate key
        ssl_protocols TLSv1.2 TLSv1.3;  # Enable secure protocols
        ssl_ciphers HIGH:!aNULL:!MD5;   # Cipher settings

        # Location block for serving static files
        location / {
            root /var/www/html;      # Document root
            index index.html index.htm;  # Default files to serve
            try_files $uri $uri/ =404;  # Return 404 if file not found
        }

        # Location block for API reverse proxy
        location /api/ {
            proxy_pass http://127.0.0.1:5000;  # Forward requests to the application server
            proxy_http_version 1.1;             # Use HTTP/1.1 for proxying
            proxy_set_header Upgrade $http_upgrade;  # Set upgrade headers for WebSocket
            proxy_set_header Connection 'upgrade';   # Set connection header for WebSocket
            proxy_set_header Host $host;             # Forward the original Host header
            proxy_set_header X-Real-IP $remote_addr;  # Forward the client's IP address
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Forwarded for header
            proxy_set_header X-Forwarded-Proto $scheme;  # Forwarded protocol header
        }

        # Location block for handling 404 errors
        error_page 404 /404.html;  # Custom 404 error page
        location = /404.html {
            internal;               # Only internal redirects can access this location
        }

        # Location block for handling 500 errors
        error_page 500 502 503 504 /50x.html;  # Custom 50x error page
        location = /50x.html {
            internal;               # Only internal redirects can access this location
        }

        # Rate limiting settings
        limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;  # Limit requests to 1 per second
        location / {
            limit_req zone=one burst=5;  # Allow bursts of up to 5 requests
        }
    }

    # Include additional configurations
    include /etc/nginx/conf.d/*.conf;  # Include other configuration files
}
